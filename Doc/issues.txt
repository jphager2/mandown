1) Page file names should be changed to follow the format Manga_name Chapter_numberPage_number (which it already is), but Page_number should be ### (e.g. 001 010 100) so it sorts correctly by file name.

2) PopularManga should be a direct decendent of a MangaList class. Most of the PopularManga class (all the instance variables and most of the methods) can go up to MangaList.  the only difference with be that PopularManga will retain the #get_mangas_list method and call it from #initialize . So it will look something like

      class PopularManga
        ...
        def initialize(uri, name)
          super

          get_mangas_list
        end

        def get_mangas_list
          ...
        end
      end

3)[DONE - along with #get_root] Extract the #get_doc method from PopularManga, Manga, and Chapter classes into the Mandown module

4) Think about extracting more methods into the tools module, including #download

5) Think about how you are going to separate the website specific code so you can use this structure with different api's.  What about putting it into a MangaReader module? What about having sub-classes, e.g. Manga::MangaReader, Chapter::MangaReader, Page::MangaReader?  I think the former would be better, but I'm not sure about switching between modules. include Mandown::MangaReader, include Mandown::ETC, would that work?
